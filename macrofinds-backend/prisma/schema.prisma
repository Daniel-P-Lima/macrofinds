// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum ActivityIntensity {
  N  // Nenhuma / Sedent√°rio
  M  // Moderada
  I  // Intensa
}

model Usuario {
  id           Int               @id @default(autoincrement()) @map("id_usuario")
  nome         String            @map("nome_usuario")
  email        String            @unique @map("email_usuario")
  senha        String            @map("senha_usuario")
  idade        Int               @map("idade_usuario")
  peso         Float             @map("peso_usuario")
  altura       Float             @map("altura_usuario")
  sexo         String?           @map("sexo_usuario")
  intensidade  ActivityIntensity @map("tipo_atividade_fisica")
  objetivo     String            @map("objetivo_usuario")
  tmb          Float?            @map("tmb_usuario")
  criadoEm     DateTime          @default(now())       @map("data_criacao_usuario")
  atualizadoEm DateTime          @updatedAt            @map("data_atualizacao_usuario")

  diets        Diet[]
}

model Food {
  id     Int         @id @default(autoincrement())
  name   String
  unit   String
  price  Float
  cal    Float
  prot   Float
  carb   Float
  plates PlateFood[]
}

model Diet {
  id           Int       @id @default(autoincrement()) @map("id_dieta")
  name         String    @map("nome_dieta")
  objective    String    @map("objetivo_dieta")
  criadoEm     DateTime  @default(now())       @map("data_criacao_dieta")
  atualizadoEm DateTime  @updatedAt            @map("data_atualizacao_dieta")
  userId       Int       @map("fk_id_usuario")
  user         Usuario   @relation(fields: [userId], references: [id])

  plates       Plate[]
}

model Plate {
  id     Int         @id @default(autoincrement())
  name   String
  dietId Int
  diet   Diet        @relation(fields: [dietId], references: [id])

  foods  PlateFood[]
}

model PlateFood {
  id      Int    @id @default(autoincrement())
  plateId Int
  foodId  Int
  amount  Int

  plate Plate @relation(fields: [plateId], references: [id])
  food  Food  @relation(fields: [foodId], references: [id])

  @@unique([plateId, foodId])
}
